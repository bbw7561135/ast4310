{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction \u00b6 These pages contain a description of AST4310 and additional resources. The pages at the University web site will still be updated (in particular the messages), but the bulk of the materials will be linked here. Practicalities \u00b6 Four hours of lectures and two hours of exercise classes per week (see calendar ) Classes will be held in person unless otherwise directed Given COVID-19 rules, students in quarantine/isolation will be able to participate remotely (see also Software and Tools ) See separate page for syllabus and literature Assessment \u00b6 The final grade is determined by an assessment of six projects. Project 1 is compulsory but only pass/fail, so it won't factor in the final grade. The following table lists deadline for handing in each project, how much each project weighs in the final grade, and the topic of each project. More details can be found under projects . Deadline Weight Topic Project 1 04.09.2020 Pass/fail Basic spectral line formation Project 2 18.09.2020 10% Line strengths and curve of growth Project 3 02.10.2020 20% La Palma Project 4 23.10.2020 25% Solar stratification and continua Project 5 13.11.2020 25% LTE line formation Project 6 11.12.2020 25 Different options Required software and tools \u00b6 This course will have a strong computational component. Computations are not the end goal, but they will be an important tool to understand the topics we will cover. Research in astrophysics is becoming more and more computational; the course will equip students with the strategies and skills to deal with modern astrophysical problems. Students are expected to have their own laptops, and bring them to classes (including lectures!). The assignments and projects can also be run on the linux machines at the Institute. This may be especially helpful for computationally-heavy calculations that need more compute power. More details can be found under software and tools . The projects are in Jupyter notebook format. Only two programming languages are allowed: Python or Julia. In the classes we will make extensive use of Jupyter lab. In addition, some basic familiarity with git is required - it will be used mostly to download and update assignments.","title":"Introduction"},{"location":"#introduction","text":"These pages contain a description of AST4310 and additional resources. The pages at the University web site will still be updated (in particular the messages), but the bulk of the materials will be linked here.","title":"Introduction"},{"location":"#practicalities","text":"Four hours of lectures and two hours of exercise classes per week (see calendar ) Classes will be held in person unless otherwise directed Given COVID-19 rules, students in quarantine/isolation will be able to participate remotely (see also Software and Tools ) See separate page for syllabus and literature","title":"Practicalities"},{"location":"#assessment","text":"The final grade is determined by an assessment of six projects. Project 1 is compulsory but only pass/fail, so it won't factor in the final grade. The following table lists deadline for handing in each project, how much each project weighs in the final grade, and the topic of each project. More details can be found under projects . Deadline Weight Topic Project 1 04.09.2020 Pass/fail Basic spectral line formation Project 2 18.09.2020 10% Line strengths and curve of growth Project 3 02.10.2020 20% La Palma Project 4 23.10.2020 25% Solar stratification and continua Project 5 13.11.2020 25% LTE line formation Project 6 11.12.2020 25 Different options","title":"Assessment"},{"location":"#required-software-and-tools","text":"This course will have a strong computational component. Computations are not the end goal, but they will be an important tool to understand the topics we will cover. Research in astrophysics is becoming more and more computational; the course will equip students with the strategies and skills to deal with modern astrophysical problems. Students are expected to have their own laptops, and bring them to classes (including lectures!). The assignments and projects can also be run on the linux machines at the Institute. This may be especially helpful for computationally-heavy calculations that need more compute power. More details can be found under software and tools . The projects are in Jupyter notebook format. Only two programming languages are allowed: Python or Julia. In the classes we will make extensive use of Jupyter lab. In addition, some basic familiarity with git is required - it will be used mostly to download and update assignments.","title":"Required software and tools"},{"location":"literature/","text":"Literature \u00b6 Lecture notes: Introduction to Astrophysical Radiative Transfer by Rob Rutten Radiative processes in astrophysics by George Rybicki and Alan Lightman The observation and analysis of stellar photospheres by David Gray Introduction to stellar astrophysics, vol.2 : Stellar atmospheres by Erika B\u00f6hm-Vitense","title":"Syllabus and literature"},{"location":"literature/#literature","text":"Lecture notes: Introduction to Astrophysical Radiative Transfer by Rob Rutten Radiative processes in astrophysics by George Rybicki and Alan Lightman The observation and analysis of stellar photospheres by David Gray Introduction to stellar astrophysics, vol.2 : Stellar atmospheres by Erika B\u00f6hm-Vitense","title":"Literature"},{"location":"projects/","text":"Literature \u00b6 Lecture notes: Introduction to Astrophysical Radiative Transfer by Rob Rutten Radiative processes in astrophysics by George Rybicki and Alan Lightman The observation and analysis of stellar photospheres by David Gray Introduction to stellar astrophysics, vol.2 : Stellar atmospheres by Erika B\u00f6hm-Vitense","title":"Project assignments"},{"location":"projects/#literature","text":"Lecture notes: Introduction to Astrophysical Radiative Transfer by Rob Rutten Radiative processes in astrophysics by George Rybicki and Alan Lightman The observation and analysis of stellar photospheres by David Gray Introduction to stellar astrophysics, vol.2 : Stellar atmospheres by Erika B\u00f6hm-Vitense","title":"Literature"},{"location":"tools/","text":"Preparation \u00b6 Software \u00b6 To do the assignments you will need Python 3.x with Astropy , plus Jupyter and many other dependencies of these packages. All the required software is already installed in the Institute's Linux machines, to which you can connect to. See the guide on how to use Python at ITA. Info If you have problems installing the software, you can, as a last resort, run the notebooks from a cloud-based solution via Binder. This has its own issues (e.g. Binder being unavailable, timeouts after 10 minutes of inactivity, etc.), so be sure to save frequently (\"Save\" and then download to your computer). Here's the binder link: . Installing in your own laptop \u00b6 You can also install the software in your laptop, which may be a more convenient option. The easiest way to do this is using the miniconda or Anaconda Python distributions ( python 3.x versions ). Miniconda is recommended because it is a smaller download, but Anaconda works just as well if you already have it or are more familiar with it. Once you have conda installed (either a new install or an older version), the recommended way to install the packages is to create a new enviroment (we'll call it ast4310 ) to ensure you have the most recent versions. You can do this by: conda create -n ast4310 -c conda-forge --yes python = 3 .7 jupyterlab sunpy ipympl bqplot nodejs This will download about 140 MB and install all the needed dependencies. Next, you need to activate this environment: source activate ast4310 Warning Every time you want to use the newly installed python packages, you must ensure you are running from the ast4310 environment. Once active, your prompt will start with (ast4310) . If you open a new terminal, you will need to activate the environment again. For Jupyterlab, you will also need to install the extensions: jupyter labextension install @jupyter-widgets/jupyterlab-manager jupyter-matplotlib jupyter lab build A notebook is a document where you can combine text, images, and source code. If you are unfamiliar with Jupyter, there are several guides and tutorials . We recommend you use Jupyterlab , the next-generation version of Jupyter. But you can also use the classical notebook interface. Testing installation \u00b6 To make sure you have all necessary software ready, start Jupyterlab from the terminal (after activating the ast4310 environment): jupyter lab This will then open up a browser with the Jupyterlab launcher. Choose \"Python 3\" notebook, and it will start a new notebook. In the first cell enter the following and run: from astropy import units import matplotlib.pyplot as plt Success If you got no error messages above, your installation is good and you are ready to start! Repository for materials \u00b6 The assignment and tutorial materials are available on a Github repository . Please clone the repository into a directory of your choice: git clone https://github.com/ITA-Solar/ast4310.git This will create a directory ast4310 . In the terminal, go to that directory and then start jupyter lab.","title":"Software and tools"},{"location":"tools/#preparation","text":"","title":"Preparation"},{"location":"tools/#software","text":"To do the assignments you will need Python 3.x with Astropy , plus Jupyter and many other dependencies of these packages. All the required software is already installed in the Institute's Linux machines, to which you can connect to. See the guide on how to use Python at ITA. Info If you have problems installing the software, you can, as a last resort, run the notebooks from a cloud-based solution via Binder. This has its own issues (e.g. Binder being unavailable, timeouts after 10 minutes of inactivity, etc.), so be sure to save frequently (\"Save\" and then download to your computer). Here's the binder link: .","title":"Software"},{"location":"tools/#installing-in-your-own-laptop","text":"You can also install the software in your laptop, which may be a more convenient option. The easiest way to do this is using the miniconda or Anaconda Python distributions ( python 3.x versions ). Miniconda is recommended because it is a smaller download, but Anaconda works just as well if you already have it or are more familiar with it. Once you have conda installed (either a new install or an older version), the recommended way to install the packages is to create a new enviroment (we'll call it ast4310 ) to ensure you have the most recent versions. You can do this by: conda create -n ast4310 -c conda-forge --yes python = 3 .7 jupyterlab sunpy ipympl bqplot nodejs This will download about 140 MB and install all the needed dependencies. Next, you need to activate this environment: source activate ast4310 Warning Every time you want to use the newly installed python packages, you must ensure you are running from the ast4310 environment. Once active, your prompt will start with (ast4310) . If you open a new terminal, you will need to activate the environment again. For Jupyterlab, you will also need to install the extensions: jupyter labextension install @jupyter-widgets/jupyterlab-manager jupyter-matplotlib jupyter lab build A notebook is a document where you can combine text, images, and source code. If you are unfamiliar with Jupyter, there are several guides and tutorials . We recommend you use Jupyterlab , the next-generation version of Jupyter. But you can also use the classical notebook interface.","title":"Installing in your own laptop"},{"location":"tools/#testing-installation","text":"To make sure you have all necessary software ready, start Jupyterlab from the terminal (after activating the ast4310 environment): jupyter lab This will then open up a browser with the Jupyterlab launcher. Choose \"Python 3\" notebook, and it will start a new notebook. In the first cell enter the following and run: from astropy import units import matplotlib.pyplot as plt Success If you got no error messages above, your installation is good and you are ready to start!","title":"Testing installation"},{"location":"tools/#repository-for-materials","text":"The assignment and tutorial materials are available on a Github repository . Please clone the repository into a directory of your choice: git clone https://github.com/ITA-Solar/ast4310.git This will create a directory ast4310 . In the terminal, go to that directory and then start jupyter lab.","title":"Repository for materials"}]}